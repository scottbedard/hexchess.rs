name: build

on:
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always

jobs:
  rust:
    name: Rust

    runs-on: ubuntu-latest

    container:
      image: xd009642/tarpaulin:develop-nightly
      options: --security-opt seccomp=unconfined

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Test
      run: cargo test

  node:
    name: Node

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
  
    - uses: pnpm/action-setup@v4
      name: Install pnpm
      with:
        version: 9
        run_install: false

    - uses: jetli/wasm-pack-action@v0.4.0
      with:
        version: 'latest'

    - name: Install dependencies
      run: pnpm install

    - name: Build wasm package
      run: pnpm build
    
    - name: TypeScript tests
      run: pnpm test

  

  versions:
    name: Check versions

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: pnpm/action-setup@v4
      name: Install pnpm
      with:
        version: 9
        run_install: false

    - name: Install dependencies
      run: pnpm install

    - name: Check versions
      run: pnpm check-versions release=${{ github.ref_name }}

  publish:
    name: Publish

    needs: [rust, node, versions]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          registry-url: https://registry.npmjs.org/
  
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9
          run_install: false

      - uses: dtolnay/rust-toolchain@stable
  
      - uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: 'latest'
  
      - name: Install dependencies
        run: pnpm install
  
      - name: Build wasm package
        run: pnpm build

      - name: Publish to NPM
        run: |
          cd ./dist
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to Crates.io
        run: |
          cargo login ${{ secrets.CARGO_TOKEN }}
          cargo publish
